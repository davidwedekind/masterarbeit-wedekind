-- basic_analysis.trips_by_start_end_gem

-- Calculate the mode share from trip-starting-point/ trip-ending-point perspective

-- @author dwedekind


-- How many trips start where?
WITH TRIP_STARTS AS
	(SELECT RUN_NAME,
			START_GEM_AGS,
			START_GEM_GEN,
			MATSIM_CAL_MAIN_MODE,
			COUNT(TRIP_ID) TRIPS_STARTING
		FROM MATSIM_OUTPUT.SIM_TRIPS_ENRICHED
		GROUP BY RUN_NAME,
			START_GEM_AGS,
			START_GEM_GEN,
			MATSIM_CAL_MAIN_MODE),
			
	-- How many trips end where?	
	TRIP_ENDS AS
	(SELECT RUN_NAME,
			END_GEM_AGS,
			END_GEM_GEN,
			MATSIM_CAL_MAIN_MODE,
			COUNT(TRIP_ID) TRIPS_ENDING
		FROM MATSIM_OUTPUT.SIM_TRIPS_ENRICHED
		GROUP BY RUN_NAME,
			END_GEM_AGS,
			END_GEM_GEN,
			MATSIM_CAL_MAIN_MODE),
			
	
	-- Get some header information which was not elegant to preserve during prior grouping
	HEADERS AS
	(SELECT DISTINCT RUN_NAME,
			GEM_AGS,
			GEM_GEN,
			MATSIM_CAL_MAIN_MODE
		FROM((SELECT RUN_NAME,
			  	START_GEM_AGS GEM_AGS,
			  	START_GEM_GEN GEM_GEN,
			  	MATSIM_CAL_MAIN_MODE
			  FROM TRIP_STARTS)
			
			 UNION
			
			 (SELECT RUN_NAME,
				END_GEM_AGS GEM_AGS,
				END_GEM_GEN GEM_GEN,
				MATSIM_CAL_MAIN_MODE
			FROM TRIP_ENDS)) AS UN)
									

-- Get some header information which was not elegant to preserve during prior grouping
SELECT H.RUN_NAME,
	H.GEM_AGS,
	H.GEM_GEN,
	H.MATSIM_CAL_MAIN_MODE,
	S.TRIPS_STARTING,
	(S.TRIPS_STARTING / SUM(S.TRIPS_STARTING) OVER (PARTITION BY H.RUN_NAME, H.GEM_AGS)) AS MODE_SHARE_START,
	E.TRIPS_ENDING,
	(E.TRIPS_ENDING / SUM(E.TRIPS_ENDING) OVER (PARTITION BY H.RUN_NAME, H.GEM_AGS)) AS MODE_SHARE_END
	
FROM HEADERS H 

-- Merge trip start information
FULL JOIN TRIP_STARTS S ON S.RUN_NAME = H.RUN_NAME
AND S.START_GEM_AGS = H.GEM_AGS
AND S.MATSIM_CAL_MAIN_MODE = H.MATSIM_CAL_MAIN_MODE

-- Merge trip end information
LEFT JOIN TRIP_ENDS E ON S.RUN_NAME = E.RUN_NAME
AND S.START_GEM_AGS = E.END_GEM_AGS
AND S.MATSIM_CAL_MAIN_MODE = E.MATSIM_CAL_MAIN_MODE